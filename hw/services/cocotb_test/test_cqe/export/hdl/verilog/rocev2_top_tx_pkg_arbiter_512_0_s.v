// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rocev2_top_tx_pkg_arbiter_512_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_mem_read_data_internal_dout,
        s_axis_mem_read_data_internal_num_data_valid,
        s_axis_mem_read_data_internal_fifo_cap,
        s_axis_mem_read_data_internal_empty_n,
        s_axis_mem_read_data_internal_read,
        tx_pkgInfoFifo_dout,
        tx_pkgInfoFifo_num_data_valid,
        tx_pkgInfoFifo_fifo_cap,
        tx_pkgInfoFifo_empty_n,
        tx_pkgInfoFifo_read,
        tx_rethMerge2rethShift_din,
        tx_rethMerge2rethShift_num_data_valid,
        tx_rethMerge2rethShift_fifo_cap,
        tx_rethMerge2rethShift_full_n,
        tx_rethMerge2rethShift_write,
        tx_split2aethShift_din,
        tx_split2aethShift_num_data_valid,
        tx_split2aethShift_fifo_cap,
        tx_split2aethShift_full_n,
        tx_split2aethShift_write,
        tx_rawPayFifo_din,
        tx_rawPayFifo_num_data_valid,
        tx_rawPayFifo_fifo_cap,
        tx_rawPayFifo_full_n,
        tx_rawPayFifo_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1023:0] s_axis_mem_read_data_internal_dout;
input  [1:0] s_axis_mem_read_data_internal_num_data_valid;
input  [1:0] s_axis_mem_read_data_internal_fifo_cap;
input   s_axis_mem_read_data_internal_empty_n;
output   s_axis_mem_read_data_internal_read;
input  [63:0] tx_pkgInfoFifo_dout;
input  [7:0] tx_pkgInfoFifo_num_data_valid;
input  [7:0] tx_pkgInfoFifo_fifo_cap;
input   tx_pkgInfoFifo_empty_n;
output   tx_pkgInfoFifo_read;
output  [1023:0] tx_rethMerge2rethShift_din;
input  [2:0] tx_rethMerge2rethShift_num_data_valid;
input  [2:0] tx_rethMerge2rethShift_fifo_cap;
input   tx_rethMerge2rethShift_full_n;
output   tx_rethMerge2rethShift_write;
output  [1023:0] tx_split2aethShift_din;
input  [2:0] tx_split2aethShift_num_data_valid;
input  [2:0] tx_split2aethShift_fifo_cap;
input   tx_split2aethShift_full_n;
output   tx_split2aethShift_write;
output  [1023:0] tx_rawPayFifo_din;
input  [2:0] tx_rawPayFifo_num_data_valid;
input  [2:0] tx_rawPayFifo_fifo_cap;
input   tx_rawPayFifo_full_n;
output   tx_rawPayFifo_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg s_axis_mem_read_data_internal_read;
reg tx_pkgInfoFifo_read;
reg tx_rethMerge2rethShift_write;
reg tx_split2aethShift_write;
reg tx_rawPayFifo_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_58_p3;
reg    ap_predicate_op29_read_state1;
reg    ap_predicate_op42_read_state1;
reg    ap_predicate_op55_read_state1;
wire   [0:0] tmp_i_nbreadreq_fu_72_p3;
reg    ap_predicate_op68_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] state_load_reg_244;
reg   [0:0] tmp_5_i_reg_248;
reg    ap_predicate_op79_write_state2;
reg   [0:0] tmp_i_170_reg_255;
reg    ap_predicate_op81_write_state2;
reg   [0:0] tmp_4_i_reg_262;
reg    ap_predicate_op83_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] state;
reg   [7:0] wordCounter_V;
reg    tx_pkgInfoFifo_blk_n;
wire    ap_block_pp0_stage0;
reg    s_axis_mem_read_data_internal_blk_n;
reg    tx_split2aethShift_blk_n;
reg    tx_rethMerge2rethShift_blk_n;
reg    tx_rawPayFifo_blk_n;
wire   [1023:0] grp_fu_132_p4;
reg   [1023:0] reg_142;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] select_ln1712_1_fu_230_p3;
wire   [0:0] grp_fu_126_p2;
wire   [7:0] grp_fu_115_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] grp_fu_120_p2;
wire   [0:0] grp_fu_107_p3;
wire   [31:0] trunc_ln1709_fu_194_p1;
wire   [0:0] icmp_ln1712_1_fu_210_p2;
wire   [0:0] icmp_ln1712_fu_204_p2;
wire   [0:0] or_ln1712_fu_224_p2;
wire   [1:0] select_ln1712_fu_216_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 state = 2'd0;
#0 wordCounter_V = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_72_p3 == 1'd1) & (state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state <= select_ln1712_1_fu_230_p3;
    end else if ((((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_126_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_126_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (grp_fu_126_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        state <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_72_p3 == 1'd1) & (state == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wordCounter_V <= 8'd0;
    end else if ((((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        wordCounter_V <= grp_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_142 <= grp_fu_132_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state_load_reg_244 <= state;
    end
end

always @ (posedge ap_clk) begin
    if (((state == 2'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_i_reg_262 <= grp_nbreadreq_fu_58_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_i_reg_248 <= grp_nbreadreq_fu_58_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_170_reg_255 <= grp_nbreadreq_fu_58_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_done_reg == 1'b0) & (ap_predicate_op55_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_done_reg == 1'b0) & (ap_predicate_op42_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_done_reg == 1'b0) & (ap_predicate_op29_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        s_axis_mem_read_data_internal_blk_n = s_axis_mem_read_data_internal_empty_n;
    end else begin
        s_axis_mem_read_data_internal_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op55_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op42_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op29_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        s_axis_mem_read_data_internal_read = 1'b1;
    end else begin
        s_axis_mem_read_data_internal_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op68_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_pkgInfoFifo_blk_n = tx_pkgInfoFifo_empty_n;
    end else begin
        tx_pkgInfoFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op68_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_pkgInfoFifo_read = 1'b1;
    end else begin
        tx_pkgInfoFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op83_write_state2 == 1'b1))) begin
        tx_rawPayFifo_blk_n = tx_rawPayFifo_full_n;
    end else begin
        tx_rawPayFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op83_write_state2 == 1'b1))) begin
        tx_rawPayFifo_write = 1'b1;
    end else begin
        tx_rawPayFifo_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op79_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        tx_rethMerge2rethShift_blk_n = tx_rethMerge2rethShift_full_n;
    end else begin
        tx_rethMerge2rethShift_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op79_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tx_rethMerge2rethShift_write = 1'b1;
    end else begin
        tx_rethMerge2rethShift_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op81_write_state2 == 1'b1))) begin
        tx_split2aethShift_blk_n = tx_split2aethShift_full_n;
    end else begin
        tx_split2aethShift_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op81_write_state2 == 1'b1))) begin
        tx_split2aethShift_write = 1'b1;
    end else begin
        tx_split2aethShift_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op68_read_state1 == 1'b1) & (tx_pkgInfoFifo_empty_n == 1'b0)) | ((ap_predicate_op55_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op79_write_state2 == 1'b1) & (tx_rethMerge2rethShift_full_n == 1'b0)) | ((ap_predicate_op83_write_state2 == 1'b1) & (tx_rawPayFifo_full_n == 1'b0)) | ((ap_predicate_op81_write_state2 == 1'b1) & (tx_split2aethShift_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op68_read_state1 == 1'b1) & (tx_pkgInfoFifo_empty_n == 1'b0)) | ((ap_predicate_op55_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op79_write_state2 == 1'b1) & (tx_rethMerge2rethShift_full_n == 1'b0)) | ((ap_predicate_op83_write_state2 == 1'b1) & (tx_rawPayFifo_full_n == 1'b0)) | ((ap_predicate_op81_write_state2 == 1'b1) & (tx_split2aethShift_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op68_read_state1 == 1'b1) & (tx_pkgInfoFifo_empty_n == 1'b0)) | ((ap_predicate_op55_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op79_write_state2 == 1'b1) & (tx_rethMerge2rethShift_full_n == 1'b0)) | ((ap_predicate_op83_write_state2 == 1'b1) & (tx_rawPayFifo_full_n == 1'b0)) | ((ap_predicate_op81_write_state2 == 1'b1) & (tx_split2aethShift_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op68_read_state1 == 1'b1) & (tx_pkgInfoFifo_empty_n == 1'b0)) | ((ap_predicate_op55_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op42_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)) | ((ap_predicate_op29_read_state1 == 1'b1) & (s_axis_mem_read_data_internal_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op79_write_state2 == 1'b1) & (tx_rethMerge2rethShift_full_n == 1'b0)) | ((ap_predicate_op83_write_state2 == 1'b1) & (tx_rawPayFifo_full_n == 1'b0)) | ((ap_predicate_op81_write_state2 == 1'b1) & (tx_split2aethShift_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op29_read_state1 = ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd2));
end

always @ (*) begin
    ap_predicate_op42_read_state1 = ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd1));
end

always @ (*) begin
    ap_predicate_op55_read_state1 = ((grp_nbreadreq_fu_58_p3 == 1'd1) & (state == 2'd3));
end

always @ (*) begin
    ap_predicate_op68_read_state1 = ((tmp_i_nbreadreq_fu_72_p3 == 1'd1) & (state == 2'd0));
end

always @ (*) begin
    ap_predicate_op79_write_state2 = ((tmp_5_i_reg_248 == 1'd1) & (state_load_reg_244 == 2'd2));
end

always @ (*) begin
    ap_predicate_op81_write_state2 = ((state_load_reg_244 == 2'd1) & (tmp_i_170_reg_255 == 1'd1));
end

always @ (*) begin
    ap_predicate_op83_write_state2 = ((state_load_reg_244 == 2'd3) & (tmp_4_i_reg_262 == 1'd1));
end

assign grp_fu_107_p3 = s_axis_mem_read_data_internal_dout[1024'd576];

assign grp_fu_115_p2 = (wordCounter_V + 8'd1);

assign grp_fu_120_p2 = ((grp_fu_115_p2 == 8'd64) ? 1'b1 : 1'b0);

assign grp_fu_126_p2 = (grp_fu_120_p2 | grp_fu_107_p3);

assign grp_fu_132_p4 = {s_axis_mem_read_data_internal_dout[1024 - 1:577], |(grp_fu_126_p2), s_axis_mem_read_data_internal_dout[575:0]};

assign grp_nbreadreq_fu_58_p3 = s_axis_mem_read_data_internal_empty_n;

assign icmp_ln1712_1_fu_210_p2 = ((trunc_ln1709_fu_194_p1 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1712_fu_204_p2 = ((trunc_ln1709_fu_194_p1 == 32'd1) ? 1'b1 : 1'b0);

assign or_ln1712_fu_224_p2 = (icmp_ln1712_fu_204_p2 | icmp_ln1712_1_fu_210_p2);

assign select_ln1712_1_fu_230_p3 = ((or_ln1712_fu_224_p2[0:0] == 1'b1) ? select_ln1712_fu_216_p3 : 2'd3);

assign select_ln1712_fu_216_p3 = ((icmp_ln1712_1_fu_210_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign tmp_i_nbreadreq_fu_72_p3 = tx_pkgInfoFifo_empty_n;

assign trunc_ln1709_fu_194_p1 = tx_pkgInfoFifo_dout[31:0];

assign tx_rawPayFifo_din = reg_142;

assign tx_rethMerge2rethShift_din = reg_142;

assign tx_split2aethShift_din = reg_142;

endmodule //rocev2_top_tx_pkg_arbiter_512_0_s
