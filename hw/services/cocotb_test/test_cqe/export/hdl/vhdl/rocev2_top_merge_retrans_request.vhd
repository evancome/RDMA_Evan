-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rocev2_top_merge_retrans_request is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tx2retrans_insertMeta_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    tx2retrans_insertMeta_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    tx2retrans_insertMeta_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    tx2retrans_insertMeta_empty_n : IN STD_LOGIC;
    tx2retrans_insertMeta_read : OUT STD_LOGIC;
    tx2retrans_insertAddrLen_dout : IN STD_LOGIC_VECTOR (191 downto 0);
    tx2retrans_insertAddrLen_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    tx2retrans_insertAddrLen_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    tx2retrans_insertAddrLen_empty_n : IN STD_LOGIC;
    tx2retrans_insertAddrLen_read : OUT STD_LOGIC;
    tx2retrans_insertRequest_din : OUT STD_LOGIC_VECTOR (319 downto 0);
    tx2retrans_insertRequest_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    tx2retrans_insertRequest_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    tx2retrans_insertRequest_full_n : IN STD_LOGIC;
    tx2retrans_insertRequest_write : OUT STD_LOGIC );
end;


architecture behav of rocev2_top_merge_retrans_request is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_i_nbreadreq_fu_58_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_300_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op20_read_state1 : BOOLEAN;
    signal ap_predicate_op21_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_i_reg_153 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_300_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op29_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tx2retrans_insertMeta_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tx2retrans_insertAddrLen_blk_n : STD_LOGIC;
    signal tx2retrans_insertRequest_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln2696_fu_93_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln2696_reg_161 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_323_i3_reg_166 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_reg_171 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_s_reg_176 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln2696_1_fu_127_p1 : STD_LOGIC_VECTOR (160 downto 0);
    signal trunc_ln2696_1_reg_181 : STD_LOGIC_VECTOR (160 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal or_ln2696_4_fu_131_p10 : STD_LOGIC_VECTOR (299 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_300_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_58_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_323_i3_reg_166 <= tx2retrans_insertMeta_dout(55 downto 32);
                tmp_4_reg_171 <= tx2retrans_insertMeta_dout(68 downto 64);
                tmp_s_reg_176 <= tx2retrans_insertAddrLen_dout(171 downto 168);
                trunc_ln2696_1_reg_181 <= trunc_ln2696_1_fu_127_p1;
                trunc_ln2696_reg_161 <= trunc_ln2696_fu_93_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_nbreadreq_fu_58_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_i_300_reg_157 <= tmp_i_300_nbreadreq_fu_66_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_i_reg_153 <= tmp_i_nbreadreq_fu_58_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tx2retrans_insertMeta_empty_n, ap_predicate_op20_read_state1, tx2retrans_insertAddrLen_empty_n, ap_predicate_op21_read_state1, ap_done_reg, tx2retrans_insertRequest_full_n, ap_predicate_op29_write_state2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op29_write_state2 = ap_const_boolean_1) and (tx2retrans_insertRequest_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (tx2retrans_insertAddrLen_empty_n = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (tx2retrans_insertMeta_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tx2retrans_insertMeta_empty_n, ap_predicate_op20_read_state1, tx2retrans_insertAddrLen_empty_n, ap_predicate_op21_read_state1, ap_done_reg, tx2retrans_insertRequest_full_n, ap_predicate_op29_write_state2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op29_write_state2 = ap_const_boolean_1) and (tx2retrans_insertRequest_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (tx2retrans_insertAddrLen_empty_n = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (tx2retrans_insertMeta_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tx2retrans_insertMeta_empty_n, ap_predicate_op20_read_state1, tx2retrans_insertAddrLen_empty_n, ap_predicate_op21_read_state1, ap_done_reg, tx2retrans_insertRequest_full_n, ap_predicate_op29_write_state2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op29_write_state2 = ap_const_boolean_1) and (tx2retrans_insertRequest_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (tx2retrans_insertAddrLen_empty_n = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (tx2retrans_insertMeta_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(tx2retrans_insertMeta_empty_n, ap_predicate_op20_read_state1, tx2retrans_insertAddrLen_empty_n, ap_predicate_op21_read_state1, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op21_read_state1 = ap_const_boolean_1) and (tx2retrans_insertAddrLen_empty_n = ap_const_logic_0)) or ((ap_predicate_op20_read_state1 = ap_const_boolean_1) and (tx2retrans_insertMeta_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(tx2retrans_insertRequest_full_n, ap_predicate_op29_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op29_write_state2 = ap_const_boolean_1) and (tx2retrans_insertRequest_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op20_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_58_p3, tmp_i_300_nbreadreq_fu_66_p3)
    begin
                ap_predicate_op20_read_state1 <= ((tmp_i_300_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_58_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op21_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_58_p3, tmp_i_300_nbreadreq_fu_66_p3)
    begin
                ap_predicate_op21_read_state1 <= ((tmp_i_300_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_58_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op29_write_state2_assign_proc : process(tmp_i_reg_153, tmp_i_300_reg_157)
    begin
                ap_predicate_op29_write_state2 <= ((tmp_i_300_reg_157 = ap_const_lv1_1) and (tmp_i_reg_153 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln2696_4_fu_131_p10 <= ((((((((tmp_s_reg_176 & ap_const_lv7_0) & trunc_ln2696_1_reg_181) & ap_const_lv59_0) & tmp_4_reg_171) & ap_const_lv8_0) & tmp_323_i3_reg_166) & ap_const_lv16_0) & trunc_ln2696_reg_161);
    tmp_i_300_nbreadreq_fu_66_p3 <= (0=>(tx2retrans_insertAddrLen_empty_n), others=>'-');
    tmp_i_nbreadreq_fu_58_p3 <= (0=>(tx2retrans_insertMeta_empty_n), others=>'-');
    trunc_ln2696_1_fu_127_p1 <= tx2retrans_insertAddrLen_dout(161 - 1 downto 0);
    trunc_ln2696_fu_93_p1 <= tx2retrans_insertMeta_dout(16 - 1 downto 0);

    tx2retrans_insertAddrLen_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tx2retrans_insertAddrLen_empty_n, ap_predicate_op21_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertAddrLen_blk_n <= tx2retrans_insertAddrLen_empty_n;
        else 
            tx2retrans_insertAddrLen_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx2retrans_insertAddrLen_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op21_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op21_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertAddrLen_read <= ap_const_logic_1;
        else 
            tx2retrans_insertAddrLen_read <= ap_const_logic_0;
        end if; 
    end process;


    tx2retrans_insertMeta_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tx2retrans_insertMeta_empty_n, ap_predicate_op20_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_predicate_op20_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertMeta_blk_n <= tx2retrans_insertMeta_empty_n;
        else 
            tx2retrans_insertMeta_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tx2retrans_insertMeta_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op20_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op20_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertMeta_read <= ap_const_logic_1;
        else 
            tx2retrans_insertMeta_read <= ap_const_logic_0;
        end if; 
    end process;


    tx2retrans_insertRequest_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tx2retrans_insertRequest_full_n, ap_predicate_op29_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op29_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertRequest_blk_n <= tx2retrans_insertRequest_full_n;
        else 
            tx2retrans_insertRequest_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tx2retrans_insertRequest_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln2696_4_fu_131_p10),320));

    tx2retrans_insertRequest_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op29_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op29_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tx2retrans_insertRequest_write <= ap_const_logic_1;
        else 
            tx2retrans_insertRequest_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
